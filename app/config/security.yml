# To get started with security, check out the documentation:
# http://symfony.com/doc/current/security.html
security:

    # http://symfony.com/doc/current/security.html#b-configuring-how-users-are-loaded
    providers:
        clspdb_provider:
            entity:
                class: AppBundle:User
                property: username

    encoders:
        AppBundle\Entity\User:
            algorithm: bcrypt


    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

#        main:
#            pattern: ^/
#            http_basic: ~
#            provider: clspdb_provider
#            anonymous: ~
#            form_login:
#                login_path: login
#                check_path: login
#                default_target_path: dashboardIndex
#            logout:
#                path: /logout
#                target: /login
            # activate different ways to authenticate

            # http_basic: ~
            # http://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: ~
            # http://symfony.com/doc/current/cookbook/security/form_login_setup.html

#        login:
#            pattern:  ^/api/login
#            stateless: true
#            anonymous: true
#            form_login:
#                check_path:               /api/login_check
#                success_handler:          lexik_jwt_authentication.handler.authentication_success
#                failure_handler:          lexik_jwt_authentication.handler.authentication_failure
#                require_previous_session: false

        login:
            pattern:  ^/api/security/loginToken
            stateless: true
            anonymous: true
#            form_login:
#                check_path:               /api/login_check
#                success_handler:          lexik_jwt_authentication.handler.authentication_success
#                failure_handler:          lexik_jwt_authentication.handler.authentication_failure
#                require_previous_session: false



        api:
            pattern:   ^/api
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

    access_control:
        #- { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        #- { path: ^/api/security/loginToken, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api,       roles: IS_AUTHENTICATED_ANONYMOUSLY, methods:[OPTIONS] }
        # require ROLE_STUDENT for /student*
        #- { path: ^/api/student, roles: ROLE_STUDENT, methods:[GET, POST, PUT, DELETE, HEAD] }

        # require ROLE_PROFESSOR for /professor*
        #- { path: ^/api/professor, roles: ROLE_PROFESSOR, methods:[GET, POST, PUT, DELETE, HEAD]}

        # require ROLE_DESIGNER for /designer*
        - { path: ^/api/designer, roles: ROLE_DESIGNER, methods:[GET, POST, PUT, DELETE, HEAD] }

        # require ROLE_ADMIN for /admin*
        #- { path: ^/api/admin, roles: ROLE_ADMIN, methods:[GET, POST, PUT, DELETE, HEAD] }
