<?php

namespace AppBundle\Entity;

use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\ORM\Mapping as ORM;

/**
 * Media
 *
 * @ORM\Table(name="media")
 * @ORM\Entity(repositoryClass="AppBundle\Repository\MediaRepository")
 */
class Media
{
    /**
     * @var int
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @var string $name Name for file (autofilled from original filename or custom)
     *
     * @ORM\Column(type = "string", length = 255)
     */
    private $name;

    /**
     * @var string $filename randomly generated unique name for file
     *
     * @ORM\Column(type = "string", unique = True, length = 64)
     */
    private $filename;

    /**
     * @var string $fileType
     *
     * @ORM\Column(type = "string", length = 64)
     */
    private $fileType;

    /**
     * Many Media have One User.
     * @ORM\ManyToOne(targetEntity="User", inversedBy="media")
     * @ORM\JoinColumn(name="user_id", referencedColumnName="id")
     */
    private $user;

    /**
     * Many Media have Many ModuleCnKeywords.
     * @ORM\ManyToMany(targetEntity="ModuleCnKeyword", mappedBy="media")
     */
    private $keywords;

    /**
     * Many Media have Many Songs.
     * @ORM\ManyToMany(targetEntity="Song", mappedBy="media")
     */
    private $songs;

    public function __construct() {
        $this->keywords = new ArrayCollection();
        $this->songs = new ArrayCollection();
    }



    /*********************************
     * Autogenerated getters/setters *
     *********************************
     */



    /**
     * Get id
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set name
     *
     * @param string $name
     *
     * @return Media
     */
    public function setName($name)
    {
        $this->name = $name;

        return $this;
    }

    /**
     * Get name
     *
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Set filename
     *
     * @param string $filename
     *
     * @return Media
     */
    public function setFilename($filename)
    {
        $this->filename = $filename;

        return $this;
    }

    /**
     * Get filename
     *
     * @return string
     */
    public function getFilename()
    {
        return $this->filename;
    }

    /**
     * Set fileType
     *
     * @param string $fileType
     *
     * @return Media
     */
    public function setFileType($fileType)
    {
        $this->fileType = $fileType;

        return $this;
    }

    /**
     * Get fileType
     *
     * @return string
     */
    public function getFileType()
    {
        return $this->fileType;
    }

    /**
     * Set user
     *
     * @param \AppBundle\Entity\User $user
     *
     * @return Media
     */
    public function setUser(\AppBundle\Entity\User $user = null)
    {
        $this->user = $user;

        return $this;
    }

    /**
     * Get user
     *
     * @return \AppBundle\Entity\User
     */
    public function getUser()
    {
        return $this->user;
    }

    /**
     * Add keyword
     *
     * @param \AppBundle\Entity\ModuleCnKeyword $keyword
     *
     * @return Media
     */
    public function addKeyword(\AppBundle\Entity\ModuleCnKeyword $keyword)
    {
        $this->keywords[] = $keyword;

        return $this;
    }

    /**
     * Remove keyword
     *
     * @param \AppBundle\Entity\ModuleCnKeyword $keyword
     */
    public function removeKeyword(\AppBundle\Entity\ModuleCnKeyword $keyword)
    {
        $this->keywords->removeElement($keyword);
    }

    /**
     * Get keywords
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getKeywords()
    {
        return $this->keywords;
    }

    /**
     * Add song
     *
     * @param \AppBundle\Entity\Song $song
     *
     * @return Media
     */
    public function addSong(\AppBundle\Entity\Song $song)
    {
        $this->songs[] = $song;

        return $this;
    }

    /**
     * Remove song
     *
     * @param \AppBundle\Entity\Song $song
     */
    public function removeSong(\AppBundle\Entity\Song $song)
    {
        $this->songs->removeElement($song);
    }

    /**
     * Get songs
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getSongs()
    {
        return $this->songs;
    }
}
